{"name": "Get answers for selected questions", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_dropdown_list.TestDropdownList object at 0x00000251FF61A4D0>, setup_driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"30821712-33e7-4203-b6c2-ec5681202d08\")>\nquestion = ['xpath', './/div[@aria-controls=\"accordion__panel-5\"]'], answer = ['xpath', './/div[@aria-labelledby=\"accordion__heading-5\"]/p']\nexpected_text = 'Самокат приезжает к вам с полной зарядкой. Этого хватает на восемь суток — даже если будете кататься без передышек и во сне. Зарядка не понадобится.'\n\n    @allure.title('Get answers for selected questions')\n    @allure.description(\"Click each question and get the answer\")\n    @pytest.mark.parametrize('question, answer, expected_text',\n         [[locators.question_0, locators.answer_0, 'Сутки — 400 рублей. Оплата курьеру — наличными или картой.'],\n         [locators.question_1, locators.answer_1,\n         'Пока что у нас так: один заказ — один самокат. Если хотите покататься с друзьями, можете просто сделать несколько заказов — один за другим.'],\n         [locators.question_2, locators.answer_2,\n         'Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.'],\n         [locators.question_3, locators.answer_3, 'Только начиная с завтрашнего дня. Но скоро станем расторопнее.'],\n         [locators.question_4, locators.answer_4,\n         'Пока что нет! Но если что-то срочное — всегда можно позвонить в поддержку по красивому номеру 1010.'],\n         [locators.question_5, locators.answer_5,\n         'Самокат приезжает к вам с полной зарядкой. Этого хватает на восемь суток — даже если будете кататься без передышек и во сне. Зарядка не понадобится.'],\n         [locators.question_6, locators.answer_6,\n         'Да, пока самокат не привезли. Штрафа не будет, объяснительной записки тоже не попросим. Все же свои.'],\n         [locators.question_7, locators.answer_7, 'Да, обязательно. Всем самокатов! И Москве, и Московской области.']]\n                             )\n    def test_answer_the_question(self, setup_driver, question, answer, expected_text):\n        main_page = MainPageScooter(setup_driver)\n        main_page.go_base_page()\n        main_page.click_cookie()\n        main_page.scroll_to_element(question)\n        main_page.click_element(question)\n>       main_page.wait_for_element(answer)\n\ntests\\test_dropdown_list.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_page.py:19: in wait_for_element\n    return WebDriverWait(self.driver, 3).until(expected_conditions.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"30821712-33e7-4203-b6c2-ec5681202d08\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x00000251FF722950>, message = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException"}, "description": "Click each question and get the answer", "steps": [{"name": "Go to the base url", "status": "passed", "start": 1702308445168, "stop": 1702308447073}, {"name": "Click cookie", "status": "passed", "start": 1702308447073, "stop": 1702308447349}], "parameters": [{"name": "question", "value": "['xpath', './/div[@aria-controls=\"accordion__panel-5\"]']"}, {"name": "answer", "value": "['xpath', './/div[@aria-labelledby=\"accordion__heading-5\"]/p']"}, {"name": "expected_text", "value": "'Самокат приезжает к вам с полной зарядкой. Этого хватает на восемь суток — даже если будете кататься без передышек и во сне. Зарядка не понадобится.'"}], "start": 1702308445168, "stop": 1702308450787, "uuid": "67042af9-a4f4-44a6-8a81-1937c089364a", "historyId": "7a0ab2ce252350e470b36a23b6eb5c84", "testCaseId": "e2215bd5d46e67eb2acdccc6d1b1037d", "fullName": "tests.test_dropdown_list.TestDropdownList#test_answer_the_question", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_dropdown_list"}, {"name": "subSuite", "value": "TestDropdownList"}, {"name": "host", "value": "DESKTOP-N69F3B6"}, {"name": "thread", "value": "7744-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_dropdown_list"}]}